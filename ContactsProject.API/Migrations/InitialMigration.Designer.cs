// <auto-generated />
using ContactsLibrary.API.DbContexts;
using ContactsLibrary.API.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace ContactsLibrary.API.Migrations
{
    [DbContext(typeof(ContactLibraryContext))]
    [Migration("20190731122611_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview7.19362.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContactsLibrary.API.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Mobile")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = Guid.Parse("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            FirstName = "Berry",
                            LastName = "Griffin",
                            Email = "bery.griffin@gmail.com",
                            Address = "First Street No 12 Milano Italy",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            FirstName = "Nancy",
                            LastName = "Rye",
                            Email = "nancy.rye@gmail.com",
                            Address = "Second Street No 1 Milano Italy",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("2902b665-1190-4c70-9915-b9c2d7680450"),
                            FirstName = "Eli",
                            LastName = "Bones",
                            Email = "eli.bones@gmail.com",
                            Address = "Third Street No 12 Rome Italy",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            FirstName = "Arnold",
                            LastName = "Stanford",
                            Email = "arnold.stanford@gmail.com",
                            Address = "Third Street No 15 Rome Italy",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                            FirstName = "Linda",
                            LastName = "Well",
                            Email = "linda.well@gmail.com",
                            Address = "Third Street No 15 Barcelona Spain",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("2aadd2df-7caf-45ab-9355-7f6332985a87"),
                            FirstName = "Ruthe",
                            LastName = "Cloven",
                            Email = "ruthe.cloven@gmail.com",
                            Address = "Third Street No 16 Barcelona Spain",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("2ee49fe3-edf2-4f91-8409-3eb25ce6ca51"),
                            FirstName = "Amy",
                            LastName = "Ridley",
                            Email = "amy.ridley@ygmail.com",
                            Address = "Fall Street No 72 Switzerland",
                            Mobile = "0745616789"
                        },
                        new
                        {
                            Id = Guid.Parse("71838f8b-6ab3-4539-9e67-4e77b8ede1c0"),
                            FirstName = "Morris",
                            LastName = "Lessmore",
                            Email = "morris.lessmore@gmail.com",
                            Address = "Fall Street No 72 Switzerland",
                            Mobile = "0745616789"
                        });
                });

            modelBuilder.Entity("ContactsLibrary.API.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("Level")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = Guid.Parse("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            Level = (byte)SkillLevel.Beginner,
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = Guid.Parse("d8663e5e-7494-4f81-8739-6e0de1bea7ee"),
                            Level = (byte)SkillLevel.Intermediate,
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = Guid.Parse("d173e20d-159e-4127-9ce9-b0ac2564ad97"),
                            Level = (byte)SkillLevel.Advanced,
                            Name = "Advanced"
                        });
                });

            modelBuilder.Entity("ContactsLibrary.API.Entities.ContactSkill", b =>
            {
                //b.Property<Guid>("Id")
                //    .ValueGeneratedOnAdd();

                b.Property<Guid>("ContactId");
                b.Property<Guid>("SkillId");

                //b.HasKey("Id");

                //b.HasIndex("ContactId");

                b.ToTable("ContactsSkills");

                b.HasOne("ContactsLibrary.API.Entities.Contact", "Contact")
                    .WithMany("ContactSkills")
                    .HasForeignKey("ContactId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("ContactsLibrary.API.Entities.Skill", "Skill")
                    .WithMany("ContactSkills")
                    .HasForeignKey("SkillId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasData(
                    new
                    {
                        ContactId = Guid.Parse("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                        SkillId = Guid.Parse("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b")
                    },
                    new
                    {
                        ContactId = Guid.Parse("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                        SkillId = Guid.Parse("d8663e5e-7494-4f81-8739-6e0de1bea7ee")
                    },
                    new
                    {
                        ContactId = Guid.Parse("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                        SkillId = Guid.Parse("d173e20d-159e-4127-9ce9-b0ac2564ad97")
                    },
                    new
                    {
                        ContactId = Guid.Parse("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                        SkillId = Guid.Parse("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b")
                    },
                    new
                    {
                        ContactId = Guid.Parse("2902b665-1190-4c70-9915-b9c2d7680450"),
                        SkillId = Guid.Parse("d173e20d-159e-4127-9ce9-b0ac2564ad97")
                    },
                    new
                    {
                        ContactId = Guid.Parse("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                        SkillId = Guid.Parse("d173e20d-159e-4127-9ce9-b0ac2564ad97")
                    },
                    new
                    {
                        ContactId = Guid.Parse("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                        SkillId = Guid.Parse("d173e20d-159e-4127-9ce9-b0ac2564ad97")
                    },
                    new
                    {
                        ContactId = Guid.Parse("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                        SkillId = Guid.Parse("d8663e5e-7494-4f81-8739-6e0de1bea7ee")
                    },
                    new
                    {
                        ContactId = Guid.Parse("2aadd2df-7caf-45ab-9355-7f6332985a87"),
                        SkillId = Guid.Parse("d8663e5e-7494-4f81-8739-6e0de1bea7ee")
                    },
                    new
                    {
                        ContactId = Guid.Parse("2ee49fe3-edf2-4f91-8409-3eb25ce6ca51"),
                        SkillId = Guid.Parse("d173e20d-159e-4127-9ce9-b0ac2564ad97")
                    },
                    new
                    {
                        ContactId = Guid.Parse("2ee49fe3-edf2-4f91-8409-3eb25ce6ca51"),
                        SkillId = Guid.Parse("d8663e5e-7494-4f81-8739-6e0de1bea7ee")
                    },
                    new
                    {
                        ContactId = Guid.Parse("71838f8b-6ab3-4539-9e67-4e77b8ede1c0"),
                        SkillId = Guid.Parse("d8663e5e-7494-4f81-8739-6e0de1bea7ee")
                    });
            });
#pragma warning restore 612, 618
        }
    }
}
